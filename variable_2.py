# -*- coding: utf-8 -*-
"""variable  2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j_2EYF__ilXbAc-lWq3zwfO_fRkZ6_Tj

1. Variable Case senstivity
"""

# TEN and ten both are different in terms of lowercase and uppercase letter
TEN = 10
ten = 20

print(Ten)

print(ten)

"""## Reserved words in Python

https://docs.python.org/2.5/ref/keywords.html

1. We should not use reserved words as variable names
2. Also python doesn't restrict the user to use reserved keywords as variable names
"""

print("Hi there")

print = "Hi there" # as a variable
type(print)

print("Hi there")

print = 12 # as a variable
type(print)

print("Hi there")

del print # delete the variable print

print("Hi there")

Print = "Hi there" # as a variable
type(Print)

print("Hi there")

print = 10

type(print)

del print

print("vani")

"""## Multi assignment of variables"""

a, b, c, yes = 10, 20.2, "vani", True

type(a)

type(b)

type(c)

type(yes)

print(type(a))
print(type(b))
print(type(c))
print(type(yes))

# a,b,c = 10

a,b,c = 10,10,10

a, A, c, C = 10, 20.2, "vani", True

print(a, A, c, C)

a=b=c=10

a,b,c

firstName, middleName, lastName = "c", "chandra", "vani"
print(f"{firstName}.{lastName}@gmail.com")

name, place, year_of_birth, weight = "vani", "Bengaluru", 1997, 80.88
print(f"""
My name is: {name}
I live at: {place}
I was born in: {year_of_birth}
My weight is: {weight} in Kgs
""")

"""## User input"""

name = input("Enter your Name: ")

print(f"You have entered: {name}")

A = input("Enter value of A: ")
B = input("Enter value of B: ")

print(f"Sum of A and B is: {A+B}")

print("Sum of A and B is: {A+B}")

A = input("Enter value of A: ")
B = input("Enter value of B: ")

print(type(A), type(B))

name = input("Name: ")
place = input("place: ")
year_of_birth = input("year_of_birth: ")

print(f"""
My name is: {name}
I live at: {place}
I was born in: {year_of_birth}
""")

# calcualte the age of the user

name = input("Name: ") # always gives you string values
place = input("place: ")
year_of_birth = input("year_of_birth: ")

age = 2022 - year_of_birth

print(f"""
My name is: {name}
I live at: {place}
{name} is of age: {age}
""")

# calcualte the age of the user

name = input("Name: ") # always gives you string values
place = input("place: ")
year_of_birth = int(input("year_of_birth: ")) # convert this into integer

age = 2022 - year_of_birth

print(f"""
My name is: {name}
I live at: {place}
{name} is of age: {age}
""")

# calcualte the age of the user

name = input("Name: ") # always gives you string values
place = input("place: ")
year_of_birth = input("year_of_birth: ") # convert this into integer

age = 2022 - int(year_of_birth)

print(f"""
My name is: {name}
I live at: {place}
{name} is of age: {age}
""")

# calcualte the age of the user

name = input("Name: ") # always gives you string values
place = input("place: ")
year_of_birth = input("year_of_birth: ") # convert this into integer
current_year = input("current year: ")
age = int(current_year) - int(year_of_birth)

print(f"""
My name is: {name}
I live at: {place}
{name} is of age: {age}
""")

"""## Type conversion

We can convert the data type of one variable into another if it is allowed
"""

#integer
A = int(input("Enter value of A: "))
B = int(input("Enter value of B: "))

print(type(A), type(B))

print(f"Sum of A and B is: {A+B}")

#float
A = float(input("Enter value of A: "))
B = float(input("Enter value of B: "))

print(f"Sum of A and B is: {A+B}")

A = float(input("Enter value of A: ")) #float and integer are adding
B = int(input("Enter value of B: "))

print(f"Sum of A and B is: {A+B}")

A = float(input("Enter value of A: "))
B = int(input("Enter value of B: "))

print(f"Sum of A and B is: {A+B}")

# String to integer
A = "50"
print(f"data type before: {type(A)}, value of A: {A}")
A = int(A)
print(f"data type after: {type(A)}, value of A: {A}")

# String to integer
A = "50.22" # entering float
print(f"data type before: {type(A)}, value of A: {A}")
A = int(A) # trying to convert into integer
print(f"data type after: {type(A)}, value of A: {A}")

# float to integer
A = 50.22
print(f"data type before: {type(A)}, value of A: {A}")
A = int(A)
print(f"data type after: {type(A)}, value of A: {A}")

# integer to float
A = 50
print(f"data type before: {type(A)}, value of A: {A}")
A = float(A)
print(f"data type after: {type(A)}, value of A: {A}")

# integer to boolean
A = 10
print(f"data type before: {type(A)}, value of A: {A}")
A = bool(A)
print(f"data type after: {type(A)}, value of A: {A}")

"""* True in binary - 1 
* False in binary - 0 
"""

# integer to boolean
A = 0
print(f"data type before: {type(A)}, value of A: {A}")
A = bool(A)
print(f"data type after: {type(A)}, value of A: {A}")

# integer to boolean
A = 1
print(f"data type before: {type(A)}, value of A: {A}")
A = bool(A)
print(f"data type after: {type(A)}, value of A: {A}")

"""> NOTE: Converting any non zero number and string values into boolean will give True as an answer

> NOTE: Empty string "" will give False as an answer after converting from string to boolean
"""

# integer to boolean
A = -5
print(f"data type before: {type(A)}, value of A: {A}")
A = bool(A)
print(f"data type after: {type(A)}, value of A: {A}")

# string to boolean
A = "vani"
print(f"data type before: {type(A)}, value of A: {A}")
A = bool(A)
print(f"data type after: {type(A)}, value of A: {A}")

# string to boolean
A = "True"
print(f"data type before: {type(A)}, value of A: {A}")
A = bool(A)
print(f"data type after: {type(A)}, value of A: {A}")

# string to boolean
A = "False"
print(f"data type before: {type(A)}, value of A: {A}")
A = bool(A)
print(f"data type after: {type(A)}, value of A: {A}")

# empty string to boolean
A = ""
print(f"data type before: {type(A)}, value of A: {A}")
A = bool(A)
print(f"data type after: {type(A)}, value of A: {A}")

# empty string to boolean
A = " "
print(f"data type before: {type(A)}, value of A: {A}")
A = bool(A)
print(f"data type after: {type(A)}, value of A: {A}")

# empty string to int
A = ""
print(f"data type before: {type(A)}, value of A: {A}")
A = int(A)
print(f"data type after: {type(A)}, value of A: {A}")

